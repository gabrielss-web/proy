from openpyxl import Workbook, load_workbook #para crear y abrir un archivo
from openpyxl.styles import PatternFill, Font, Alignment #usar colores en excel/cambiar letra/alinear texto
from openpyxl.drawing.image import Image #pone el logo en excel
import os
import tkinter as tk
from tkinter import messagebox
from PIL import Image,ImageTk
from pythonds3 import Deque

colaTurnos = Deque()
listaDatos = []

def tiempoRecursivo(size):
    if size<=1:
        return 0

    return 12 + tiempoRecursivo(size-1) 

def cambio(cantidad, denominaciones):
    resultado = []
    while cantidad > 0:
        if cantidad >= denominaciones[0]:  
            num = cantidad // denominaciones[0]  
            cantidad -= num * denominaciones[0]  
            resultado.append([denominaciones[0], num])  
        denominaciones = denominaciones[1:]  
    return resultado



def ventanaAgendar():
    ventanaDos = tk.Toplevel()
    ventanaDos.title("Agendar cita")
    ventanaDos.geometry("600x500")
    ventanaDos.configure(bg="light blue")
    ventanaDos.resizable(False,False)

    etiquetaAgendar=tk.Label(ventanaDos,text="Escriba su nombre: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar.pack()
    entradaNom=tk.Entry(ventanaDos)
    entradaNom.pack()
    etiquetaAgendar2=tk.Label(ventanaDos,text="Escriba su ID: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar2.pack()
    entradaid=tk.Entry(ventanaDos)
    entradaid.pack()
    etiquetaAgendar3=tk.Label(ventanaDos,text="Escriba su telefono: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar3.pack()
    entradaTel=tk.Entry(ventanaDos)
    entradaTel.pack()
    etiquetaAgendar4=tk.Label(ventanaDos,text="Ingrese el dinero: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar4.pack()
    entradaDin=tk.Entry(ventanaDos)
    entradaDin.pack()
    etiquetaAgendar5=tk.Label(ventanaDos,text="Costo de la consulta : $500 pesos mexicanos ",bg="light blue",fg="black",relief="flat",width=40,height=2)
    etiquetaAgendar5.pack()

    registroCitas = "registroCitas.xlsx"

    if not os.path.exists(registroCitas):
        libro = Workbook()
        hoja = libro.active
        hoja.title = "Pacientes"
        # Título en la primera fila
        hoja.merge_cells('A1:C1')
        titulo = hoja['A1']
        titulo.value = "Registro citas pacientes"
        titulo.fill = PatternFill(start_color="0070C0", end_color="0070C0", fill_type="solid")
        titulo.font = Font(color="FFFFFF", bold=True, size=14)
        titulo.alignment = Alignment(horizontal="center", vertical="center")
        # Encabezados en la segunda fila
        hoja.append(["Nombre", "ID", "Telefono"])
        # Ajustar el ancho de columnas
        hoja.column_dimensions['A'].width = 30 
        hoja.column_dimensions['B'].width = 15
        hoja.column_dimensions['C'].width = 20
        # (Opcional podemos agregar el logo de la empresa o del laboratorio que nos cpngtrate)
        logo = "logo.png"  # asi le puse a mi imagen, no se como le pusiste tu
        if os.path.exists(logo):
            img = Image(logo)
            img.width = 160  # Tamaño de la imagen en pixeles
            img.height = 103
            hoja.add_image(img, "D1")  #Pongo la imagen en la celda D1
        libro.save(registroCitas)


    def cerrarVentanaDos():
        ventanaDos.destroy()

    def guardarDatos():
        global nombre 
        nombre = entradaNom.get()
        global id 
        id = entradaid.get()
        global telefono 
        telefono = entradaTel.get()
        global dinero
        dinero = entradaDin.get()
        if not nombre or not id or not telefono or not dinero or len(telefono)!=10 or len(id)!=8 or not id.isdigit() or not telefono.isdigit() or not dinero.isdigit() or int(dinero)<500:
            messagebox.showwarning("Datos incompletos", "Verifica lo que escribiste. ID y telefono deben ser 8 y 10 numeros respectivamente. Tambien deben ser minimo $500 pesos")
            return
        else:
            colaTurnos.add_rear(id)
            turnoAsig=colaTurnos.size()
            tiempo=tiempoRecursivo(turnoAsig)
            cambioRecibido=cambio(int(dinero)-500,[500,200,100,50,20,10,5,1])
            listaDatos.append({"Nombre":nombre,"ID":id,"Telefono":telefono})

            etiquetaAgendar5=tk.Label(ventanaDos,text="Datos guardados con exito! ",bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaAgendar5.pack()
            etiquetaAgendar6=tk.Label(ventanaDos,text="Numero de turno asignado = {} ".format(turnoAsig),bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaAgendar6.pack()
            etiquetaAgendar7=tk.Label(ventanaDos,text="Tiempo promedio de espera = {} minutos".format(tiempo),bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaAgendar7.pack()
            etiquetaAgendar8=tk.Label(ventanaDos,text="Cambio recibido =${} .Repartido en: {} ".format(int(dinero)-500,cambioRecibido),bg="light blue",fg="black",relief="flat",width=70,height=2)
            etiquetaAgendar8.pack()
            boton2=tk.Button(ventanaDos,text="Terminar",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=cerrarVentanaDos)
            boton2.pack()
        
        
        libro = load_workbook(registroCitas)
        hoja = libro["Pacientes"]
        hoja.append([nombre, id, telefono])
        libro.save(registroCitas)
    
    
    boton1=tk.Button(ventanaDos,text="Guardar datos",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=guardarDatos)
    boton1.pack(side="bottom")

def ventanaMedico():
    ventanaDos = tk.Toplevel()
    ventanaDos.title("Interfaz del Medico ")
    ventanaDos.geometry("700x500")
    ventanaDos.configure(bg="light blue")
    ventanaDos.resizable(False,False)

    etiquetaMedico=tk.Label(ventanaDos,text="Datos del paciente actual: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaMedico.pack()
    etiquetaMedico2=tk.Label(ventanaDos,text="Diagnostico hecho para el paciente ",bg="light blue",fg="black",relief="flat",width=40,height=2)
    etiquetaMedico2.pack()
    entradaDiag=tk.Entry(ventanaDos)
    entradaDiag.pack()
    etiquetaMedico3=tk.Label(ventanaDos,text="Medicamentos recetados: ",bg="light blue",fg="black",relief="flat",width=40,height=2)
    etiquetaMedico3.pack()
    entradaMed=tk.Entry(ventanaDos)
    entradaMed.pack()


    def cerrarVentanaTres():
        ventanaDos.destroy()
    
    def guardarDatosMedicos():
        global diagnostico 
        diagnostico = entradaDiag.get()
        global medicamento 
        medicamento = entradaMed.get()
        if not diagnostico or not medicamento:
            messagebox.showwarning("Datos incompletos", "Por favor, llena todos los espacios.")
            return
        else:

            etiquetaMedico1=tk.Label(ventanaDos,text="Datos guardados con exito! ",bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaMedico1.pack()
            etiquetaMedico2=tk.Label(ventanaDos,text="La base de datos en Excel ha sido actualizada ",bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaMedico2.pack()
            boton2=tk.Button(ventanaDos,text="Terminar",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=cerrarVentanaTres)
            boton2.pack()
            
    boton1=tk.Button(ventanaDos,text="Guardar datos",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=guardarDatosMedicos)
    boton1.pack(side="bottom")

def ventanaTurnos():
    ventanaDos = tk.Toplevel()
    ventanaDos.title("Visualizacion de Turnos")
    ventanaDos.geometry("510x300")
    ventanaDos.configure(bg="light blue")
    ventanaDos.resizable(False,False)

    etiquetaMedico2=tk.Label(ventanaDos,text="Escribe tu ID para saber tu turno ",bg="light blue",fg="black",relief="flat",width=40,height=2)
    etiquetaMedico2.pack()
    entradaBuscarid=tk.Entry(ventanaDos)
    entradaBuscarid.pack()

    def cerrarVentanaCuatro():
        ventanaDos.destroy()
    
    def turnos():
        global buscarID
        buscarID = entradaBuscarid.get()
        if not buscarID.isdigit() or len(buscarID)!=8:
            messagebox.showwarning("Datos errones", "Por favor, escribe solo 8 numeros.")
            return

        else:
            listaCola=list(colaTurnos._items)
            listaCola.reverse()
            print(listaCola)
            if buscarID in listaCola:
                posicion=listaCola.index(buscarID)
                personasAnterior= posicion
                turno = posicion+1
                tiempoEspera=tiempoRecursivo(turno)
            else:
                messagebox.showwarning("Error", "El ID que ingresaste no esta registrado")

            etiquetaMedico1=tk.Label(ventanaDos,text="Tienes {} personas por delante de ti".format(personasAnterior),bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaMedico1.pack()
            etiquetaMedico2=tk.Label(ventanaDos,text="Numero de turno asignado = {} ".format(turno),bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaMedico2.pack()
            etiquetaMedico3=tk.Label(ventanaDos,text="Tiempo promedio de espera = {} ".format(tiempoEspera),bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaMedico3.pack()
            boton2=tk.Button(ventanaDos,text="Terminar",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=cerrarVentanaCuatro)
            boton2.pack()
            
    boton1=tk.Button(ventanaDos,text="Guardar datos",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=turnos)
    boton1.pack(side="bottom")
        
#ventana principal
def cerrarVentana():
    ventana.destroy()
    print("Texto",nombre,id,telefono)

ventana=tk.Tk()

ventana.title("OptiMed")
ventana.geometry("510x300")
ventana.configure(bg="light blue")
ventana.resizable(False,False)


etiqueta=tk.Label(ventana,text="¡Bienvenidos a OptiMed!",bg="light blue",fg="black",relief="flat",width=40,height=2)
etiqueta.place(x=120,y=10)
etiqueta2=tk.Label(ventana,text="¿Que operacion deseas realizar hoy?",justify="center",bg="light blue",fg="black",relief="flat",width=40,height=2)
etiqueta2.place(x=120,y=50)
boton1=tk.Button(ventana,text="Agendar una cita",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaAgendar)
boton1.place(x=10,y=150)
boton2=tk.Button(ventana,text="Ingresar como medico",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaMedico)
boton2.place(x=180,y=150)
boton3=tk.Button(ventana,text="Ver turnos existentes",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaTurnos)
boton3.place(x=350,y=150)
boton4=tk.Button(ventana,text="Salir",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=cerrarVentana)
boton4.place(x=215,y=250)
ventana.mainloop()
