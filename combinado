from openpyxl import Workbook, load_workbook # Para crear y abrir un archivo de Excel
from openpyxl.styles import PatternFill, Font, Alignment # Para aplicar colores, cambiar fuente y alinear texto en Excel
from openpyxl.drawing.image import Image # Para insertar imágenes en el archivo de Excel
import os
import tkinter as tk # Para crear la interfaz gráfica
from tkinter import messagebox # Para mostrar mensajes emergentes de advertencia o éxito
from PIL import Image, ImageTk # Para trabajar con imágenes en la interfaz gráfica

def ventanaAgendar():
    ventanaDos = tk.Toplevel() # Crea una nueva ventana secundaria
    ventanaDos.title("Agendar cita") # Establece el título de la ventana
    ventanaDos.geometry("600x500") # Establece el tamaño de la ventana
    ventanaDos.configure(bg="light blue") # Configura el color de fondo de la ventana
    ventanaDos.resizable(False,False) # Evita que el usuario pueda cambiar el tamaño de la ventana

    # Creación de etiquetas y campos de entrada para los datos del paciente
    etiquetaAgendar=tk.Label(ventanaDos,text="Escriba su nombre: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar.pack()
    entradaNom=tk.Entry(ventanaDos)
    entradaNom.pack()
    etiquetaAgendar2=tk.Label(ventanaDos,text="Escriba su ID: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar2.pack()
    entradaid=tk.Entry(ventanaDos)
    entradaid.pack()
    etiquetaAgendar3=tk.Label(ventanaDos,text="Escriba su teléfono: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar3.pack()
    entradaTel=tk.Entry(ventanaDos)
    entradaTel.pack()
    etiquetaAgendar4=tk.Label(ventanaDos,text="Ingrese el dinero: ",bg="light blue",fg="black",relief="flat",width=20,height=2)
    etiquetaAgendar4.pack()
    entradaDin=tk.Entry(ventanaDos)
    entradaDin.pack()
    etiquetaAgendar5=tk.Label(ventanaDos,text="Costo de la consulta : $500 pesos mexicanos ",bg="light blue",fg="black",relief="flat",width=40,height=2)
    etiquetaAgendar5.pack()

    registroCitas = "registroCitas.xlsx" # Nombre del archivo de Excel para almacenar datos

    # Si el archivo no existe, se crea uno nuevo con los encabezados adecuados
    if not os.path.exists(registroCitas):
        libro = Workbook()
        hoja = libro.active
        hoja.title = "Pacientes"
        
        # Título en la primera fila con formato
        hoja.merge_cells('A1:C1')
        titulo = hoja['A1']
        titulo.value = "Registro citas pacientes"
        titulo.fill = PatternFill(start_color="0070C0", end_color="0070C0", fill_type="solid")
        titulo.font = Font(color="FFFFFF", bold=True, size=14)
        titulo.alignment = Alignment(horizontal="center", vertical="center")

        # Encabezados en la segunda fila
        hoja.append(["Nombre", "ID", "Telefono"])
        
        # Ajustar el ancho de columnas
        hoja.column_dimensions['A'].width = 30 
        hoja.column_dimensions['B'].width = 15
        hoja.column_dimensions['C'].width = 20

        # Agregar el logo si existe
        logo = "logo.png"  # Se usa una imagen llamada "logo.png"
        if os.path.exists(logo):
            img = Image(logo)
            img.width = 160  # Tamaño de la imagen en píxeles
            img.height = 103
            hoja.add_image(img, "D1") # Se coloca en la celda D1

        libro.save(registroCitas) # Guardar el archivo

    def cerrarVentanaDos():
        ventanaDos.destroy() # Cierra la ventana secundaria
    
    def guardarDatos():
        global nombre 
        nombre = entradaNom.get()
        global id 
        id = entradaid.get()
        global telefono 
        telefono = entradaTel.get()
        global dinero
        dinero = entradaDin.get()
        
        # Validaciones de datos ingresados por el usuario
        if not nombre or not id or not telefono or not dinero or len(telefono)!=10 or len(id)!=8 or not id.isdigit() or not telefono.isdigit() or not dinero.isdigit() or int(dinero)<500:
            messagebox.showwarning("Datos incompletos", "Verifica lo que escribiste. ID y teléfono deben ser 8 y 10 números respectivamente. También deben ser mínimo $500 pesos")
            return
        else:
            etiquetaAgendar5=tk.Label(ventanaDos,text="Datos guardados con éxito!",bg="light blue",fg="black",relief="flat",width=40,height=2)
            etiquetaAgendar5.pack()

            # Guardar los datos en el archivo de Excel
            libro = load_workbook(registroCitas)
            hoja = libro["Pacientes"]
            hoja.append([nombre, id, telefono])
            libro.save(registroCitas)
    
    # Botón para guardar los datos ingresados
    boton1=tk.Button(ventanaDos,text="Guardar datos",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=guardarDatos)
    boton1.pack(side="bottom")

# La misma lógica se aplica a la ventana del médico y visualización de turnos...

# Creación de la ventana principal con botones de opciones
ventana=tk.Tk()
ventana.title("OptiMed") # Título de la ventana principal
ventana.geometry("510x300") # Tamaño de la ventana
ventana.configure(bg="light blue") # Color de fondo
ventana.resizable(False,False) # Deshabilitar cambio de tamaño

# Etiquetas y botones en la ventana principal
etiqueta=tk.Label(ventana,text="¡Bienvenidos a OptiMed!",bg="light blue",fg="black",relief="flat",width=40,height=2)
etiqueta.place(x=120,y=10)
etiqueta2=tk.Label(ventana,text="¿Qué operación deseas realizar hoy?",justify="center",bg="light blue",fg="black",relief="flat",width=40,height=2)
etiqueta2.place(x=120,y=50)
boton1=tk.Button(ventana,text="Agendar una cita",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaAgendar)
boton1.place(x=10,y=150)
boton2=tk.Button(ventana,text="Ingresar como médico",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaMedico)
boton2.place(x=180,y=150)
boton3=tk.Button(ventana,text="Ver turnos existentes",bg="light grey",fg="black",relief="raised",width=20,height=2,cursor="hand2",command=ventanaTurnos)
boton3.place(x=350,y=150)
boton4=tk.Button(ventana,text="Salir",bg="light grey",fg="black",relief="raised",width=10,height=2,cursor="hand2",command=cerrarVentana)
boton4.place(x=215,y=250)

ventana.mainloop()
